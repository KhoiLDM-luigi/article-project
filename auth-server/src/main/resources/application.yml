# server:
#   port: 8080

spring:
  application:
    name: auth-server

  profiles:
    active: default
  
  config:
    import: "optional:configserver:"

  cloud:
    config:
      fail-fast: true
      discovery:
        enabled: true
        service-id: config-server

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka

#   security:
#     oauth2:
#       authorizationserver:
#           issuer: http://127.0.0.1:8080
#           client:
#             articles-client:
#               registration:
#                 client-id: articles-client
#                 client-secret: $2a$12$djoKXwrUalKsucgpyjf.C.u8f.LalvzIXKxe.xSN3xc.ikB9pfm6i
#                 client-name: Articles Client
#                 client-authentication-methods:
#                   - client_secret_post
#                 authorization-grant-types:
#                   - authorization_code
#                   - refresh_token
#                 redirect-uris:
#                   - http://127.0.0.1:8082/login/oauth2/code/spring
#                 scopes:
#                   - openid
#                   - articles.read
#             debug:
#               registration:
#                 client-id: debug
#                 client-secret: $2a$12$fuwGsYQf8n7fTBObG6SHOuZsC/uEXzPkP0U0SnlB7dZBVQtn/mgEC 
#                 client-name: Articles Client
#                 client-authentication-methods:
#                   - client_secret_post
#                 authorization-grant-types:
#                   - authorization_code
#                   - refresh_token
#                 redirect-uris:
#                   - https://oidcdebugger.com/debug
#                 scopes:
#                   - openid
#                   - articles.read

#   datasource:
#     url: jdbc:postgresql://127.0.0.1:5433/auth_db
#     username: psql
#     password: 123

# logging:
#   level:
#     org:
#       springframework:
#         security: DEBUG
